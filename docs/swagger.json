{
    "swagger": "2.0",
    "info": {
        "description": "API для управления транзакциями и кошельками",
        "title": "Payment System API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/send": {
            "post": {
                "description": "Переводит денежные средства с одного кошелька на другой",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Отправить денежные средства",
                "parameters": [
                    {
                        "description": "Данные транзакции",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Wallet not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/transactions": {
            "get": {
                "description": "Возвращает N последних по времени переводов средств",
                "produces": [
                    "application/json"
                ],
                "summary": "Получить последние транзакции",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество транзакций",
                        "name": "count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/wallet/{address}/balance": {
            "get": {
                "description": "Возвращает баланс по адресу кошелька",
                "produces": [
                    "application/json"
                ],
                "summary": "Получить баланс кошелька",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Адрес кошелька",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Wallet"
                        }
                    },
                    "400": {
                        "description": "Invalid address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Wallet not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/wallets": {
            "get": {
                "description": "Возвращает все кошельки из БД",
                "produces": [
                    "application/json"
                ],
                "summary": "Получить список всех кошельков (для удобства проверки работоспособности API проверяющими)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Wallet"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateTransactionRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 0.01,
                    "example": 10
                },
                "from": {
                    "type": "string",
                    "example": "e240d825d255af751f5f55af8d9671be"
                },
                "to": {
                    "type": "string",
                    "example": "abdf2236c0a3b4e2639b3e182d994c88e"
                }
            }
        },
        "models.StatusResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Transaction completed"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "models.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "models.Wallet": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                }
            }
        }
    }
}